{"version":3,"sources":["Components/PersonListItem.js","Components/People.js","Components/FilmList.js","Components/Person.js","Components/Films.js","Components/Navbar.js","Components/Home.js","Components/FilmPage.js","App.js","serviceWorker.js","index.js"],"names":["Item","styled","div","PersonListItem","name","id","to","key","Container","Wrapper","Input","input","People","useState","people","setPeople","search","setSearch","useEffect","axios","get","then","res","console","log","data","results","persons","filter","person","toLowerCase","includes","toPerson","useCallback","index","type","onChange","e","target","value","map","FilmList","filmLinks","films","setFilms","Promise","all","link","a","responce","film","title","Linked","Person","setPerson","personId","useParams","gender","height","hair_color","Films","toFilm","Menu","Links","Navbar","className","Home","Plot","p","Film","setFilm","filmId","episode_id","opening_crawl","GlobalStyle","createGlobalStyle","props","theme","mode","Button","button","App","setTheme","Fragment","onClick","path","exact","component","FilmPage","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.75701be2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Item = styled.div`\r\n  color: #ffb13a;\r\n  font-size: 25px;\r\n  padding: 25px;\r\n  text-align: center;\r\n  border: 2px solid transparent;\r\n\r\n  &:hover {\r\n    color: #03a9f4;\r\n    border-color: #03a9f4;\r\n    border-radius: 25px;\r\n    transition: border-color .35s ease-in-out, color .35s ease-in-out;\r\n  }\r\n`;\r\n\r\nexport default function PersonListItem({ name, id }) {\r\n  return (\r\n    <Link to={`/people/${id}`} key={id}>\r\n      <Item>{name}</Item>\r\n    </Link>\r\n  );\r\n}\r\n","import React, {  useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\n\r\nimport PersonListItem from './PersonListItem';\r\n\r\nconst Container = styled.div`\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex,\r\n  justify-content: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    width: 250px;\r\n    padding: 7px;\r\n    background: transparent;\r\n    border: 2px solid #fff;\r\n    border-radius: 25px;\r\n    color: #fff;\r\n    font-size: 20px;\r\n    outline: none;\r\n\r\n`;\r\n\r\n\r\nexport default function People() {\r\n  const [people, setPeople] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  \r\n\r\n  useEffect(() => {\r\n    axios.get(\"https://swapi.dev/api/people/\")\r\n      .then(res => {\r\n        console.log(res.data.results);\r\n        setPeople(res.data.results);\r\n      });\r\n  }, [setPeople]);\r\n\r\n  const persons = people.filter(person => person.name.toLowerCase().includes(search.toLowerCase()))\r\n  console.log(people, 'people')\r\n\r\n  const toPerson = useCallback((person, index) => <PersonListItem name={person.name} id={index + 1} />);\r\n  \r\n\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Input type=\"text\" onChange={e => setSearch(e.target.value)} />\r\n      <Container>{persons.map(toPerson)}</Container>\r\n    </Wrapper>\r\n    \r\n  )\r\n}\r\n","import React , {useState, useCallback, useEffect} from 'react'\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Item = styled.div`\r\n  color: #ffb13a;\r\n  font-size: 25px;\r\n  padding: 25px;\r\n  text-align: center;\r\n  border: 2px solid transparent;\r\n\r\n  &:hover {\r\n    color: #03a9f4;\r\n    border-color: #03a9f4;\r\n    border-radius: 25px;\r\n    transition: border-color .35s ease-in-out, color .35s ease-in-out;\r\n  }\r\n`;\r\n\r\n\r\nexport default function FilmList({ filmLinks }) {\r\n  const [films, setFilms] = useState([]);\r\n  \r\n  console.log('filmlinks', filmLinks);\r\n\r\n  useEffect(() => {\r\n    Promise.all(\r\n      filmLinks.map( async (link) => {\r\n        const responce = await axios.get(link);\r\n        return responce;\r\n      })\r\n    ).then(res => setFilms(res))\r\n  }, [filmLinks])\r\n\r\n  \r\n\r\n  console.log('fucking films',films);\r\n\r\n  return (\r\n    <div> \r\n     Films: {films.map((film, index) => {\r\n        return (\r\n          <Link to={`/films/${index+1}`} key={index+1}><Item>{film.data.title}</Item></Link> )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport FilmList from \"./FilmList\";\r\n\r\n\r\nconst Wrapper = styled.div` text-align:center `;\r\n\r\nconst Item = styled.div`\r\n  color: #ffb13a;\r\n  font-size: 25px;\r\n  padding: 10px;\r\n  text-align: center;\r\n  border: 2px solid transparent;\r\n`;\r\n\r\nconst Linked = styled.div`\r\n  margin-bottom: 10px;\r\n  padding: 10px;\r\n  color: #fff;\r\n  border: 2px solid transparent;\r\n  font-size: 20px;\r\n\r\n  &:hover {\r\n    color: #03a9f4;\r\n    border-bottom-color: #03a9f4;\r\n    transition: border-bottom-color .35s ease-in-out, color .35s ease-in-out;\r\n  }\r\n  `;\r\n\r\nexport default function Person() {\r\n  const [person, setPerson] = useState();\r\n  let { personId } = useParams();\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://swapi.dev/api/people/${personId}/`).then((res) => {\r\n\r\n      setPerson(res.data);\r\n    });\r\n  }, [personId, setPerson]);\r\n\r\n  if (!person) {\r\n    return <div>Loading.....</div>;\r\n  }\r\n\r\n\r\n  return (\r\n    <Wrapper >\r\n      <Link to=\"/people\">\r\n        <Linked>Back</Linked>\r\n      </Link>\r\n      <Item>name: {person.name}</Item>\r\n      <Item>gender: {person.gender}</Item>\r\n      <Item>height: {person.height}</Item>\r\n      <Item>hair: {person.hair_color}</Item>\r\n      <FilmList filmLinks={person.films} /> \r\n    </Wrapper>\r\n  );\r\n}\r\n","import React, {  useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom'\r\nimport styled from 'styled-components';\r\n\r\nconst Item = styled.div`\r\n  color: #ffb13a;\r\n  font-size: 25px;\r\n  padding: 25px;\r\n  text-align: center;\r\n  border: 2px solid transparent;\r\n\r\n  &:hover {\r\n    color: #03a9f4;\r\n    border-color: #03a9f4;\r\n    border-radius: 25px;\r\n    transition: border-color .35s ease-in-out, color .35s ease-in-out;\r\n  }\r\n`;\r\n\r\nconst Loading = styled.div`font-size: 25px; color: #fff; `\r\n\r\nexport default function Films() {\r\n  const [film, setFilms] = useState([]);\r\n  \r\n\r\n  useEffect(() => {\r\n    axios.get(\"https://swapi.dev/api/films/\")\r\n      .then(res => {\r\n        console.log(res.data.results);\r\n        setFilms(res.data.results);\r\n      });\r\n  }, [setFilms]);\r\n\r\n\r\n\r\n  const toFilm = useCallback((film, index) => {\r\n    return (\r\n      <Link to={`/films/${index+1}`} key={index + 1}>\r\n        <Item>{film.title}</Item>\r\n    </Link>\r\n    )\r\n  });\r\n\r\n \r\n  return <div >{film.map(toFilm)}</div>\r\n}","import React, {useState} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  margin: 0 111px;\r\n  display: flex;\r\n`;\r\nconst Menu = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Links = styled.div`\r\n  font-size: 20px;\r\n  color: #fff;\r\n  padding: 20px;\r\n  border: 1px solid transparent;\r\n\r\n  &:hover {\r\n    border-bottom-color: #03a9f4;\r\n    color: #03a9f4;\r\n    transition: border-bottom-color 0.3s ease-in, color 0.3s ease-in;\r\n  }\r\n`;\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <Menu>\r\n      <Container className='navbar'>\r\n        <Link to=\"/\">\r\n          <Links className='nav-link'>Home</Links>\r\n        </Link>\r\n        <Link to=\"/people\">\r\n          <Links className='nav-link'>People</Links>{\" \"}\r\n        </Link>\r\n        <Link to=\"/films\">\r\n          <Links className='nav-link'>Films</Links>{\" \"}\r\n        </Link>\r\n        \r\n      </Container>\r\n    </Menu>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\n\r\nconst Wrapper = styled.div` \r\n    background: url('./stars.png');\r\n\t\tbackground-size: cover;\r\n    overflow: hidden;\r\n    color: #ffb13a;\r\n\r\n    .crawl {\r\n\t\tfont-family: Arial, sans-serif;\r\n\t\ttext-align: justify;\r\n\t\tmargin: 0 auto;\r\n\t\tfont-weight: 800;\r\n\t\tfont-size: 50px;\r\n\t\tline-height: 80px;\r\n\t\twidth: 1000px;\r\n\t\theight: 1600px;\r\n\t\ttransform: perspective(250px) rotateX(20deg);\r\n\t\tanimation: scrollCrawl 90s linear;\r\n\t}\r\n\r\n\t.preheader {\r\n\t\ttext-align: center;\r\n\t\tmargin: 40px 0;\r\n\t}\r\n\r\n\t.header {\r\n\t\ttext-align: center;\r\n\t\tmargin: 0 0 100px 0;\r\n\t}\r\n\r\n\t@keyframes scrollCrawl {\r\n\t\t0% {\r\n\t\t\ttransform: perspective(250px) rotateX(20deg) translateY(680px);\r\n\t\t\topacity: 1;\r\n\t\t}\r\n\t\t50% {\r\n\t\t\topacity: 1;\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform: perspective(250px) rotateX(20deg) translateY(-4000px);\r\n\t\t\topacity: 0;\r\n\t\t}\r\n\t}\r\n\t\t\r\n`;\r\n\r\n\r\nexport default function Home() {\r\n  return (\r\n    <Wrapper >\r\n      <div className=\"crawl\">\r\n        <p className=\"preheader\">Hello Oleksandr!</p>\r\n        <h2 className=\"header\">THIS IS MY HOMEWORK</h2>\r\n        <p>\r\n          This is my react app \r\n        </p>\r\n        <p>\r\n          With the support of the REPUBLIC, I create it. Unfortunately, I could not figure out how to set the picture on the background body element, \r\n\t\t\t\t\tso I decided to pass it how it's look like\r\n        </p>\r\n        <p>\tI hope you will like my app </p>\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst Wrapper = styled.div` text-align:center `;\r\n\r\nconst Item = styled.div`\r\n  color: #ffb13a;\r\n  font-size: 25px;\r\n  padding: 10px;\r\n  text-align: center;\r\n  border: 2px solid transparent;\r\n`;\r\n\r\nconst Linked = styled.div`\r\n  margin-bottom: 10px;\r\n  padding: 10px;\r\n  color: #fff;\r\n  border: 2px solid transparent;\r\n  font-size: 20px;\r\n\r\n  &:hover {\r\n    color: #03a9f4;\r\n    border-bottom-color: #03a9f4;\r\n    transition: border-bottom-color .35s ease-in-out, color .35s ease-in-out;\r\n  }\r\n  `;\r\n\r\n  const Plot = styled.p`\r\n    line-heigth: 10px;\r\n  `\r\n\r\nexport default function Film() {\r\n  const [film, setFilm] = useState();\r\n  let { filmId } = useParams();\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://swapi.dev/api/films/${filmId}/`).then((res) => {\r\n    \r\n      setFilm(res.data);\r\n    });\r\n  }, [filmId, setFilm]);\r\n\r\n  if (!film) {\r\n    return <div>Loading.....</div>;\r\n  }\r\n\r\n\r\n  return (\r\n    <Wrapper >\r\n      <Link to=\"/films\">\r\n        <Linked>Back</Linked>\r\n      </Link>\r\n      <Item> <h1>{film.title}</h1></Item>\r\n      <Item>Episode: {film.episode_id}</Item>\r\n      <Item><Plot>{film.opening_crawl}</Plot></Item>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport styled, { ThemeProvider, createGlobalStyle } from \"styled-components\";\r\n\r\nimport People from \"./Components/People\";\r\nimport Person from \"./Components/Person\";\r\nimport Films from \"./Components/Films\";\r\nimport Navbar from \"./Components/Navbar\";\r\nimport Home from \"./Components/Home\";\r\nimport FilmPage from \"./Components/FilmPage\";\r\n\r\nconst Container = styled.div`\r\n  margin: 111px;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n  .nav-link{\r\n    color: ${(props) => (props.theme.mode === \"dark\" ? \"#fff\" : \"#ffb13a\")};\r\n  }\r\n  .crawl {\r\n    color: ${(props) => (props.theme.mode === \"dark\" ? \"#ffb13a\" : \"#fff\")};\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n\r\n  position: fixed;\r\n  left: 47%;\r\n  top: 10%;\r\n  padding: 15px;\r\n  background: transparent;\r\n  color: #fff;\r\n  outline: none;\r\n  border: 1px solid #fff;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  font-size: 18px;\r\n\r\n  &:hover {\r\n    border-color: #03a9f4;\r\n    color: #03a9f4;\r\n    transition: border-bottom-color 0.2s ease-in, color 0.2s ease-in; \r\n  }\r\n  `;\r\n\r\n\r\n\r\nfunction App() {\r\n  const [theme,setTheme] = useState({mode : 'dark'})\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <React.Fragment>\r\n        <GlobalStyle />\r\n        <Router>\r\n          <Navbar />\r\n          <Button onClick={e => setTheme(theme.mode === 'dark' ? { mode: 'ligth'} : {mode : 'dark'})} >Toggle theme</Button>\r\n          <Container>\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route path=\"/people\" exact component={People} />\r\n            <Route path=\"/people/:personId\" exact component={Person} />\r\n            <Route path=\"/films\" exact component={Films} />\r\n            <Route path=\"/films/:filmId\" exact component={FilmPage} />\r\n          </Container>\r\n        </Router>\r\n      </React.Fragment>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\n\r\nReactDOM.render(\r\n  <App />,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}